1. Which of the following is the proper declaration of a pointer?
– int x;
– int &x;
– ptr x;
– int *x;     (CORRECT)

2. Which of the following gives the memory address of integer variable a?
– *a;
– a;
– &a;         (CORRECT)
– address(a);

3. Which of the following gives the memory address of a variable pointed to by pointer
a?
– a;
– *a;
– &a;
– address(a);

4. Which of the following gives the value stored at the address pointed to by pointer
a?
– a;
– val(a);
– *a;
– &a;

5. Which of the following is the proper keyword or function to allocate memory in
C?
– new
– malloc
– create
– value

6. Which of the following is the proper keyword or function to deallocate memory?
– free
– delete
– clear
– remove

--------------------------------------------------------------------------------

Analyse the following C source code. Discuss what it does.

#include "dm510_msgbox.h"
#include <stdlib.h>
#include <string.h>

typedef struct _msg_t msg_t;
struct _msg_t {
  msg_t* previous;
  int length;
  char* message;
};

static msg_t *bottom = NULL;
static msg_t *top = NULL;

int dm510_msgbox_put( char *buffer, int length ) {
  msg_t* msg = malloc(sizeof(msg_t));
  msg->previous = NULL;
  msg->length = length;
  msg->message = malloc(length);
  memcpy(msg->message, buffer, length);
  if (bottom == NULL) {
    bottom = msg;
    top = msg;
  } else {
    /* not empty stack */
    msg->previous = top;
    top = msg;
  }
return 0;
}

int dm510_msgbox_get( char* buffer, int length ) {
  if (top != NULL) {
    msg_t* msg = top;
    int mlength = msg->length;
    top = msg->previous;
    /* copy message */
    memcpy(buffer, msg->message, mlength);
    /* free memory */
    free(msg->message);
    free(msg);
    return mlength;
    }
  return -1;
}

int main(int argc, char** argv) {
  char *in = "This is a stupid message.";
  char msg[50];
  int msglen;
  /* Send a message containing ’in’ */
  dm510_msgbox_put(in, strlen(in)+1);
  /* Read a message */
  msglen = dm510_msgbox_get(msg, 50);
  return 0;
}
